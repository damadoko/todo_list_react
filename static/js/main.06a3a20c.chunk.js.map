{"version":3,"sources":["Components/Todos/filterTasks/FilterTasks.module.css","Components/Todos/RecordTasks/RecordTasks.module.css","Components/Todos/TaskList/Task/Task.module.css","Components/Todos/AddTask/AddTask.module.css","Components/Todos/TaskList/TaskList.module.css","Components/LayOut/Header/Header.module.css","Components/Todos/Todos.module.css","Components/Todos/TaskList/Task/Task.js","Components/Todos/TaskList/TaskList.js","Components/Todos/AddTask/AddTask.js","Components/Todos/filterTasks/FilterTasks.js","Components/Todos/RecordTasks/RecordTasks.js","Components/Todos/Todos.js","Components/LayOut/Header/Header.js","containers/_DataMockup.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Task","props","delTaskHandler","title","dataId","updateTaskHandler","changeStatusHandler","status","filter","TaskStyle","classes","TaskTimes","push","Hide","Done","Show","className","join","TaskWraper","onClick","TaskContent","type","onChange","e","value","TaskList","tasksArr","titleList","map","item","key","id","isDone","length","Alert","AddTask","addTaskHandler","inputString","Input","target","onKeyDown","keyCode","Add","FilterTasks","delDoneTaskHandler","changeFilterHandler","styleAllFilterBtn","FilterBtn","styleDoneFilterBtn","styleRemainFilterBtn","disableBtnNoTask","Disabled","Current","Filter","Clear","disabled","RecordTasks","totalTasks","doneTasks","remainTasks","Records","Wrapper","Record","Num","Todos","Header","Brand","dataMockUp","taskItems","getInitData","JSON","parse","localStorage","getItem","DataMockUp","App","task","data","state","newTask","setState","setItem","stringify","parentNode","children","placeholder","delID","delItemIndex","indexOf","splice","updateID","updateItemIndex","updateItem","statusID","taskIndex","curStatus","initData","this","console","log","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.06a3a20c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"FilterTasks_Filter__1eGT9\",\"FilterBtn\":\"FilterTasks_FilterBtn__-dkvT\",\"Disabled\":\"FilterTasks_Disabled__2AU4w\",\"Current\":\"FilterTasks_Current__2-x85\",\"Clear\":\"FilterTasks_Clear__1BPGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Records\":\"RecordTasks_Records__2h3xP\",\"Wrapper\":\"RecordTasks_Wrapper__116KH\",\"Record\":\"RecordTasks_Record__1dPtp\",\"Num\":\"RecordTasks_Num__3vlGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hide\":\"Task_Hide__2ikQW\",\"Done\":\"Task_Done__3Do3U\",\"Show\":\"Task_Show__3vng_\",\"Task\":\"Task_Task__2oJPA\",\"TaskContent\":\"Task_TaskContent__2FDjX\",\"TaskWraper\":\"Task_TaskWraper__2x_v2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddTask\":\"AddTask_AddTask__1ArLz\",\"Input\":\"AddTask_Input__3lRyy\",\"Add\":\"AddTask_Add__20S9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"TaskList_TaskList__2taRu\",\"Alert\":\"TaskList_Alert__28U9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__i3DT3\",\"Brand\":\"Header_Brand__2FnKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todos\":\"Todos_Todos__33l6S\",\"Filter\":\"Todos_Filter__1LN08\",\"Record\":\"Todos_Record__3IwIw\"};","import React from \"react\";\nimport classes from \"./Task.module.css\";\n\nexport default function Task(props) {\n  const {\n    delTaskHandler,\n    title,\n    dataId,\n    updateTaskHandler,\n    changeStatusHandler,\n    status,\n    filter\n  } = props;\n  const TaskStyle = [classes.Task];\n  const TaskTimes = [\"fas\", \"fa-times\"];\n\n  // Filter\n  if ((status && filter === \"remain\") || (!status && filter === \"done\")) {\n    TaskStyle.push(classes.Hide);\n  }\n\n  // Done\n  if (status) {\n    TaskStyle.push(classes.Done);\n    TaskTimes.push(classes.Show);\n  }\n\n  return (\n    <div className={TaskStyle.join(\" \")}>\n      <div className={classes.TaskWraper}>\n        <i\n          className=\"fas fa-check\"\n          onClick={() => changeStatusHandler(dataId)}\n        />\n        <input\n          className={classes.TaskContent}\n          type=\"text\"\n          onChange={e => updateTaskHandler(e, dataId)}\n          value={title}\n        />\n      </div>\n      <i\n        className={TaskTimes.join(\" \")}\n        onClick={() => delTaskHandler(dataId)}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Task from \"./Task/Task\";\nimport classes from \"./TaskList.module.css\";\n\nexport default function TaskList(props) {\n  const {\n    tasksArr,\n    delTaskHandler,\n    updateTaskHandler,\n    filter,\n    changeStatusHandler\n  } = props;\n\n  const noTaskAvailable = () => {\n    if (tasksArr.length === 0) {\n      return (\n        <p className={classes.Alert}>\n          There're no task available, please add your task!\n        </p>\n      );\n    } else {\n      return <p></p>;\n    }\n  };\n\n  const titleList = tasksArr.map(item => (\n    <Task\n      title={item.title}\n      key={item.id}\n      dataId={item.id}\n      delTaskHandler={delTaskHandler}\n      updateTaskHandler={updateTaskHandler}\n      changeStatusHandler={changeStatusHandler}\n      status={item.isDone}\n      filter={filter}\n    />\n  ));\n  return (\n    <div className={classes.TaskList}>\n      {titleList} {noTaskAvailable()}\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./AddTask.module.css\";\n\nexport default function AddTask(props) {\n  const { addTaskHandler } = props;\n  let inputString = \"\";\n  const getInputString = e => {\n    inputString = e.target.value;\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      addTaskHandler(inputString, e);\n    }\n  };\n\n  // const clearInput = e => {\n  //   e.target.value = \"\";\n  // };\n  return (\n    <div className={classes.AddTask}>\n      <input\n        className={classes.Input}\n        type=\"text\"\n        onChange={getInputString}\n        onKeyDown={handleKeyDown}\n      />\n      <button\n        className={classes.Add}\n        type=\"button\"\n        onClick={e => addTaskHandler(inputString, e)}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./FilterTasks.module.css\";\n\nexport default function FilterTasks(props) {\n  const { delDoneTaskHandler, changeFilterHandler, tasksArr, filter } = props;\n\n  const styleAllFilterBtn = [classes.FilterBtn];\n  const styleDoneFilterBtn = [classes.FilterBtn];\n  const styleRemainFilterBtn = [classes.FilterBtn];\n\n  const disableBtnNoTask = (() => {\n    if (tasksArr.length === 0) {\n      styleAllFilterBtn.push(classes.Disabled);\n      styleDoneFilterBtn.push(classes.Disabled);\n      styleRemainFilterBtn.push(classes.Disabled);\n      return true;\n    } else {\n      return false;\n    }\n  })();\n\n  const identifyCurrentFilter = () => {\n    if (filter === \"all\") {\n      styleAllFilterBtn.push(classes.Current);\n    } else if (filter === \"done\") {\n      styleDoneFilterBtn.push(classes.Current);\n    } else {\n      styleRemainFilterBtn.push(classes.Current);\n    }\n  };\n  identifyCurrentFilter();\n  return (\n    <div className={classes.Filter}>\n      <button\n        className={classes.Clear}\n        type=\"button\"\n        onClick={delDoneTaskHandler}\n      >\n        Clear Done Tasks\n      </button>\n      <div>\n        <label>Filter by:</label>\n        <button\n          className={styleAllFilterBtn.join(\" \")}\n          type=\"button\"\n          onClick={() => changeFilterHandler(\"all\")}\n          disabled={disableBtnNoTask}\n        >\n          All\n        </button>\n        <button\n          className={styleDoneFilterBtn.join(\" \")}\n          type=\"button\"\n          onClick={() => changeFilterHandler(\"done\")}\n          disabled={disableBtnNoTask}\n        >\n          Done\n        </button>\n        <button\n          className={styleRemainFilterBtn.join(\" \")}\n          type=\"button\"\n          onClick={() => changeFilterHandler(\"remain\")}\n          disabled={disableBtnNoTask}\n        >\n          Remain\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./RecordTasks.module.css\";\n\nexport default function RecordTasks(props) {\n  const { tasksArr } = props;\n\n  const totalTasks = tasksArr.length;\n  const doneTasks = tasksArr.filter(item => item.isDone).length;\n  const remainTasks = tasksArr.filter(item => !item.isDone).length;\n\n  return (\n    <div className={classes.Records}>\n      <div className={classes.Wrapper}>\n        <div className={classes.Record}>\n          <p className={classes.Num}>{totalTasks}</p>\n          <p>Total tasks</p>\n        </div>\n        <div className={classes.Record}>\n          <p className={classes.Num}>{doneTasks}</p>\n          <p>Done tasks</p>\n        </div>\n        <div className={classes.Record}>\n          <p className={classes.Num}>{remainTasks}</p>\n          <p>Remain tasks</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TaskList from \"./TaskList/TaskList\";\nimport AddTask from \"./AddTask/AddTask\";\nimport FilterTasks from \"./filterTasks/FilterTasks\";\nimport RecordTasks from \"./RecordTasks/RecordTasks\";\nimport classes from \"./Todos.module.css\";\n\nexport default function Todos(props) {\n  const {\n    addTaskHandler,\n    delTaskHandler,\n    updateTaskHandler,\n    delDoneTaskHandler,\n    tasksArr,\n    changeFilterHandler,\n    changeStatusHandler,\n    filter\n  } = props;\n  return (\n    <div className={classes.Todos}>\n      <AddTask addTaskHandler={addTaskHandler} />\n      <FilterTasks\n        delDoneTaskHandler={delDoneTaskHandler}\n        tasksArr={tasksArr}\n        changeFilterHandler={changeFilterHandler}\n        filter={filter}\n      />\n      <TaskList\n        tasksArr={tasksArr}\n        delTaskHandler={delTaskHandler}\n        updateTaskHandler={updateTaskHandler}\n        changeStatusHandler={changeStatusHandler}\n        filter={filter}\n      />\n      <RecordTasks tasksArr={tasksArr} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./Header.module.css\";\n\nexport default function() {\n  return (\n    <div className={classes.Header}>\n      <h1 className={classes.Brand}>Todo List</h1>\n    </div>\n  );\n}\n","const dataMockUp = {\n  taskItems: [\n    { id: 0, title: \"Code App\", isDone: true },\n    {\n      id: 1,\n      title: \"Code another App\",\n      isDone: false\n    },\n    {\n      id: 2,\n      title: \"Code another App again!\",\n      isDone: false\n    }\n  ],\n  filter: \"all\" //all, done, remain\n};\nexport default dataMockUp;\n","import React, { Component, Fragment } from \"react\";\nimport Todos from \"../Components/Todos/Todos\";\nimport Header from \"../Components/LayOut/Header/Header\";\nimport DataMockUp from \"./_DataMockup\";\n\nconst getInitData =\n  JSON.parse(localStorage.getItem(\"DATA_LOCAL\")) || DataMockUp;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = getInitData;\n  }\n\n  componentDidMount() {\n    const initData = { ...this.state };\n    localStorage.setItem(\"DATA_LOCAL\", JSON.stringify(initData));\n  }\n\n  // Add Task\n  addTaskHandler = (task, e) => {\n    // console.log(task);\n    if (task.length > 0) {\n      let newID;\n      const data = { ...this.state };\n\n      data.taskItems.length === 0\n        ? (newID = 0)\n        : (newID = data.taskItems[data.taskItems.length - 1].id + 1);\n\n      const newTask = {\n        id: newID,\n        title: task,\n        isDone: false\n      };\n\n      data.taskItems.push(newTask);\n\n      this.setState(data);\n      localStorage.setItem(\"DATA_LOCAL\", JSON.stringify(data));\n      // Clear input field\n      e.target.parentNode.children[0].value = \" \";\n    } else {\n      // Alert user to input text\n      e.target.parentNode.children[0].placeholder = \"Please input your task!\";\n    }\n  };\n  // Delete single Task\n  delTaskHandler = delID => {\n    const data = { ...this.state };\n    const delItemIndex = data.taskItems.map(item => item.id).indexOf(delID);\n    data.taskItems.splice(delItemIndex, 1);\n\n    this.setState(data);\n    localStorage.setItem(\"DATA_LOCAL\", JSON.stringify(data));\n  };\n\n  // Delete done Tasks\n  delDoneTaskHandler = () => {\n    let data = { ...this.state };\n    data.taskItems = data.taskItems.filter(item => !item.isDone);\n\n    this.setState(data);\n    localStorage.setItem(\"DATA_LOCAL\", JSON.stringify(data));\n  };\n\n  // Update Task\n  updateTaskHandler = (e, updateID) => {\n    // console.log(\"update!\");\n    const data = { ...this.state };\n    const updateItemIndex = data.taskItems\n      .map(item => item.id)\n      .indexOf(updateID);\n    const updateItem = data.taskItems[updateItemIndex];\n    if (!updateItem.isDone) {\n      updateItem.title = e.target.value;\n    }\n\n    this.setState(data);\n    localStorage.setItem(\"DATA_LOCAL\", JSON.stringify(data));\n  };\n\n  // Change filter\n  changeFilterHandler = filter => {\n    // console.log(\"clicked!\");\n    const data = { ...this.state };\n    data.filter = filter;\n    this.setState(data);\n    localStorage.setItem(\"DATA_LOCAL\", JSON.stringify(data));\n  };\n\n  // Change status\n  changeStatusHandler = statusID => {\n    const data = { ...this.state };\n    const taskIndex = data.taskItems.map(item => item.id).indexOf(statusID);\n    const curStatus = data.taskItems[taskIndex].isDone;\n    data.taskItems[taskIndex].isDone = !curStatus;\n    this.setState(data);\n    localStorage.setItem(\"DATA_LOCAL\", JSON.stringify(data));\n  };\n\n  render() {\n    console.log(\"rendering\");\n    const { taskItems, filter } = this.state;\n    return (\n      <Fragment>\n        <Header />\n        <div className=\"container\">\n          <Todos\n            tasksArr={taskItems}\n            addTaskHandler={this.addTaskHandler}\n            delTaskHandler={this.delTaskHandler}\n            updateTaskHandler={this.updateTaskHandler}\n            delDoneTaskHandler={this.delDoneTaskHandler}\n            changeFilterHandler={this.changeFilterHandler}\n            changeStatusHandler={this.changeStatusHandler}\n            filter={filter}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}